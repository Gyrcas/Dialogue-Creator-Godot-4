[gd_scene load_steps=2 format=3 uid="uid://dfmgsf2cblrc5"]

[sub_resource type="GDScript" id="GDScript_hshgn"]
script/source = "@tool
extends VBoxContainer

@onready var text : TextEdit = $text

const max_retry : int = 5
var default_size : Vector2 = size
var focused : bool = false
var zoom : float = 1

func _on_add_pressed() -> void:
	var box : DialogueBox = get_node(\"../../\")
	box.add_child_box(box.types.choice_option)

func _on_text_text_changed() -> void:
	get_node(\"../../\").content = text.text

func set_content(retry : int = 0) -> void:
	retry += 1
	if retry < max_retry:
		if not get_node(\"../../\") is DialogueBox || !text:
			set_content.call_deferred(retry)
			return
		if get_node(\"../../\").content == \"\" || text.text != get_node(\"../../\").content:
			if get_tree():
				await get_tree().create_timer(0.1).timeout
			text.text = get_node(\"../../\").content
			set_content.call_deferred(retry)

func _input(event : InputEvent):
	if focused && event is InputEventKey && event.is_pressed():
		match event.keycode:
			61:
				zoom += 0.05
				text.size = default_size * zoom
			45:
				zoom -= 0.05
				text.size = default_size * zoom


func _on_text_focus_entered() -> void:
	text.size = default_size * zoom
	z_index = 100
	focused = true


func _on_text_focus_exited() -> void:
	text.size = default_size
	z_index = 0
	focused = false
"

[node name="choice" type="VBoxContainer"]
offset_right = 40.0
offset_bottom = 40.0
script = SubResource("GDScript_hshgn")

[node name="text" type="TextEdit" parent="."]
custom_minimum_size = Vector2(200, 100)
layout_mode = 2

[node name="add" type="Button" parent="."]
layout_mode = 2
text = "+"

[connection signal="focus_entered" from="text" to="." method="_on_text_focus_entered"]
[connection signal="focus_exited" from="text" to="." method="_on_text_focus_exited"]
[connection signal="text_changed" from="text" to="." method="_on_text_text_changed"]
[connection signal="pressed" from="add" to="." method="_on_add_pressed"]
